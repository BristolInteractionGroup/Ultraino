/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package acousticfield3d.gui.misc;

import acousticfield3d.algorithms.CalcField;
import acousticfield3d.gui.MainForm;
import acousticfield3d.math.M;
import acousticfield3d.math.Vector2f;
import acousticfield3d.math.Vector3f;
import acousticfield3d.scene.Entity;
import acousticfield3d.simulation.Transducer;
import java.util.ArrayList;

/**
 *
 * @author am14010
 */
public class ContribAndPhaseDiffForm extends javax.swing.JFrame {
    final MainForm mf;
    
    final ArrayList<Float> previousPhases = new ArrayList<>();
    
    public ContribAndPhaseDiffForm(final MainForm mf) {
        this.mf = mf;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        initButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        phaseDistText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transContribArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prevTransContribArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        initButton.setText("Init");
        initButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Phase distance:");

        phaseDistText.setEditable(false);
        phaseDistText.setText("0.0");

        jLabel2.setText("transducers contribution (current):");

        transContribArea.setColumns(20);
        transContribArea.setRows(5);
        jScrollPane1.setViewportView(transContribArea);

        jLabel3.setText("transducers contribution (previous):");

        prevTransContribArea.setColumns(20);
        prevTransContribArea.setRows(5);
        jScrollPane2.setViewportView(prevTransContribArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(initButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phaseDistText, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1))
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(phaseDistText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initButton)
                    .addComponent(updateButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initButtonActionPerformed
        snapPhases();
        phaseDistText.setText("");
        transContribArea.setText("");
        prevTransContribArea.setText("");
    }//GEN-LAST:event_initButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        phaseDistText.setText( calcPhaseDiff() + "");
        prevTransContribArea.setText( transContribArea.getText() );
        reportTransducerContrib();
        snapPhases();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void snapPhases(){
        previousPhases.clear();
        for(Transducer t : mf.simulation.transducers){
            previousPhases.add( t.getPhase() * M.PI);
        }
    }
    
    private float calcPhaseDiff(){
        float diff = 0;
        final int n = Math.min(mf.simulation.transducers.size(), previousPhases.size());
        for(int i = 0; i<n; ++i){
            final float phaseA = previousPhases.get(i);
            final float phaseB = mf.simulation.transducers.get(i).getPhase() * M.PI;
            diff += M.abs( M.angleDiff(phaseA, phaseB));
        }
        return diff/n;
    }
    
    private void reportTransducerContrib(){
        final ArrayList<Transducer> trans = mf.simulation.transducers;
        final Entity point = mf.movePanel.getBeadEntity();
        
        final Vector3f pointPos = point.getTransform().getTranslation();
        final StringBuilder sb = new StringBuilder();
        for(Transducer t : trans){
            //total the field at the point
            final Vector2f field = CalcField.calcFieldAt(pointPos, mf);
            //field generate by the transducer at the point
            final Vector2f fieldT = CalcField.calcFieldForTrans(t, t.getPhase() * M.PI, pointPos.x, pointPos.y, pointPos.z, mf);

            //calculate the contribution from the transducer
            final float fieldLength = field.length();
            //final float fieldTLength = fieldT.length();
            final float contribution = fieldT.dot(field) / fieldLength / fieldLength;
            sb.append(contribution + "\n");
        }
        transContribArea.setText(sb.toString());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton initButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField phaseDistText;
    private javax.swing.JTextArea prevTransContribArea;
    private javax.swing.JTextArea transContribArea;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
